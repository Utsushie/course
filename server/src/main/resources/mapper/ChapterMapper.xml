<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.course.server.mapper.ChapterMapper">
	<resultMap id="BaseResultMap" type="com.course.server.domain.Chapter">
		<id column="id" jdbcType="CHAR" property="id"/>
		<result column="course_id" jdbcType="CHAR" property="courseId"/>
		<result column="name" jdbcType="VARCHAR" property="name"/>
		<result column="is_del" jdbcType="INTEGER" property="isDel"/>
		<result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
		<result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
		<result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
		<result column="updated_by" jdbcType="VARCHAR" property="updatedBy"/>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="("
									         separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="("
									         separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, course_id, name, is_del, created_time, updated_time, created_by, updated_by
	</sql>
	<select id="selectByExample" parameterType="com.course.server.domain.ChapterExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List"/>
		from cs_chapter
		<if test="_parameter != null">
			<include refid="Example_Where_Clause"/>
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from cs_chapter
		where id = #{id,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete
		from cs_chapter
		where id = #{id,jdbcType=CHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.course.server.domain.ChapterExample">
		delete from cs_chapter
		<if test="_parameter != null">
			<include refid="Example_Where_Clause"/>
		</if>
	</delete>
	<insert id="insert" parameterType="com.course.server.domain.Chapter">
		insert into cs_chapter (id, course_id, name,
		                        is_del, created_time, updated_time,
		                        created_by, updated_by)
		values (#{id,jdbcType=CHAR}, #{courseId,jdbcType=CHAR}, #{name,jdbcType=VARCHAR},
		        #{isDel,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP},
		        #{createdBy,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.course.server.domain.Chapter">
		insert into cs_chapter
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="courseId != null">
				course_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="isDel != null">
				is_del,
			</if>
			<if test="createdTime != null">
				created_time,
			</if>
			<if test="updatedTime != null">
				updated_time,
			</if>
			<if test="createdBy != null">
				created_by,
			</if>
			<if test="updatedBy != null">
				updated_by,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=CHAR},
			</if>
			<if test="courseId != null">
				#{courseId,jdbcType=CHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="isDel != null">
				#{isDel,jdbcType=INTEGER},
			</if>
			<if test="createdTime != null">
				#{createdTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedTime != null">
				#{updatedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createdBy != null">
				#{createdBy,jdbcType=VARCHAR},
			</if>
			<if test="updatedBy != null">
				#{updatedBy,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.course.server.domain.ChapterExample" resultType="java.lang.Long">
		select count(*) from cs_chapter
		<if test="_parameter != null">
			<include refid="Example_Where_Clause"/>
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update cs_chapter
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=CHAR},
			</if>
			<if test="record.courseId != null">
				course_id = #{record.courseId,jdbcType=CHAR},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.isDel != null">
				is_del = #{record.isDel,jdbcType=INTEGER},
			</if>
			<if test="record.createdTime != null">
				created_time = #{record.createdTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updatedTime != null">
				updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.createdBy != null">
				created_by = #{record.createdBy,jdbcType=VARCHAR},
			</if>
			<if test="record.updatedBy != null">
				updated_by = #{record.updatedBy,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause"/>
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update cs_chapter
		set id = #{record.id,jdbcType=CHAR},
		course_id = #{record.courseId,jdbcType=CHAR},
		name = #{record.name,jdbcType=VARCHAR},
		is_del = #{record.isDel,jdbcType=INTEGER},
		created_time = #{record.createdTime,jdbcType=TIMESTAMP},
		updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
		created_by = #{record.createdBy,jdbcType=VARCHAR},
		updated_by = #{record.updatedBy,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause"/>
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.course.server.domain.Chapter">
		update cs_chapter
		<set>
			<if test="courseId != null">
				course_id = #{courseId,jdbcType=CHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="isDel != null">
				is_del = #{isDel,jdbcType=INTEGER},
			</if>
			<if test="createdTime != null">
				created_time = #{createdTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedTime != null">
				updated_time = #{updatedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createdBy != null">
				created_by = #{createdBy,jdbcType=VARCHAR},
			</if>
			<if test="updatedBy != null">
				updated_by = #{updatedBy,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.course.server.domain.Chapter">
		update cs_chapter
		set course_id    = #{courseId,jdbcType=CHAR},
		    name         = #{name,jdbcType=VARCHAR},
		    is_del       = #{isDel,jdbcType=INTEGER},
		    created_time = #{createdTime,jdbcType=TIMESTAMP},
		    updated_time = #{updatedTime,jdbcType=TIMESTAMP},
		    created_by   = #{createdBy,jdbcType=VARCHAR},
		    updated_by   = #{updatedBy,jdbcType=VARCHAR}
		where id = #{id,jdbcType=CHAR}
	</update>

		<!-- 获取大章列表 -->
	<select id="getChapterList" parameterType="com.course.server.dto.ChapterDto" resultType="com.course.server.dto.ChapterDto">
		SELECT	t1.id,
		       	t1.course_id AS courseId,
		       	t1.name,
		       	t2.name AS courseName
		FROM	cs_chapter t1
		LEFT JOIN cs_course t2
		ON		t1.course_id = t2.id
		WHERE	t1.is_del = 0
		ORDER BY t1.updated_time DESC
	</select>

	<!-- 获取大章信息 -->
	<select id="getChapterInfo" parameterType="com.course.server.dto.ChapterDto" resultType="com.course.server.dto.ChapterDto">
		SELECT	t1.id,
			  	t1.course_id AS courseId,
			  	t1.name,
			  	t2.name AS courseName
		FROM	cs_chapter t1
		LEFT JOIN cs_course t2
	  	ON		t1.course_id = t2.id
		WHERE	t1.is_del = 0
		AND		t1.id = #{id}
	</select>

</mapper>